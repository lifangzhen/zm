<?xml version="1.0"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
    
<sqlMap namespace="Operator_SqlMap">
    
    <typeAlias alias="ops" type="com.lun.mlm.model.Ops"/>
    <typeAlias alias="operator" type="com.lun.mlm.model.Operator"/>
    <typeAlias alias="role" type="com.lun.mlm.model.Role"/>
    <typeAlias alias="roleOp" type="com.lun.mlm.model.RoleOp"/>
    
    <select id="listOpsByRoleId" parameterClass="java.lang.String" resultClass="ops">
    	SELECT * FROM ops a
    	<isNotNull property="value">
		WHERE a.id in (
			SELECT t.opsId FROM roleOp t
			WHERE t.roleId = #roleId#
		)
		</isNotNull>
		order by number
    </select>
    
    <insert id="addOperator" parameterClass="operator">
        INSERT INTO operator (
				id,
				createTime,
				loginName,
				passwd,
				linkMan,
				linkMobile,
				roleId,
				updateTime
			)
			VALUES
				(#id#,
				 NOW(),
			   #loginName#,
			   #passwd#,
			   #linkMan#,
			   #linkMobile#,
			   #roleId#,
			   NOW()
			)
    </insert>
    
    <select id="getOperatorByLoginName" resultClass="operator">
    	SELECT * FROM operator o
		WHERE o.loginName = #loginName#
    </select>
    
    <update id="updateOperator" parameterClass="operator" >
        UPDATE operator t
		SET t.updateTime = NOW(),
			   <isNotNull property="passwd">
					t.passwd = #passwd#,
			   </isNotNull>
				<isNotNull property="linkMan">
					t.linkMan = #linkMan#,
				</isNotNull>
				<isNotNull property="linkMobile">
					t.linkMobile = #linkMobile#,
				</isNotNull>
				<isNotNull property="roleId">
					t.roleId = #roleId#,
				</isNotNull>
		    	<isNotNull property="passError">
					t.passError = #passError#,
				</isNotNull>
				t.updateTime = NOW()
		WHERE t.id = #id#
    </update>
    
    <select id="listOperatorByRoleId"  parameterClass="java.lang.String"  resultClass="operator">
    	SELECT * FROM operator o
    	<isNotEmpty property="value">
		WHERE o.roleId = #roleId#
		</isNotEmpty>
    </select>
    
    <delete id="deleteOperator" parameterClass="java.lang.String" >
       DELETE FROM operator 
		WHERE id = #id#
    </delete>
    
    <select id="listRolesByName" resultClass="role">
        SELECT  * FROM role t
       	WHERE 1 =  1
       	<isNotEmpty property="name">
			AND t.name like concat('%', #name#, '%')
		</isNotEmpty>
        order by t.createTime
        <isNotEmpty property="start">
        LIMIT #start#, #end#
        </isNotEmpty>
    </select>
    
    <select id="getRole"  parameterClass="java.lang.String" resultClass="role">
        SELECT  * FROM role t
       	WHERE t.id = #id#
    </select>
    
    <select id="countRolesByName" resultClass="java.lang.Integer">
        SELECT  count(1) FROM role t
       	WHERE  1 =  1
       	<isNotNull property="value">
			AND t.name like concat('%', #name#, '%')
		</isNotNull>
    </select>
    
    <insert id="addRole" parameterClass="role">
        INSERT INTO role (
				id,
				createTime,
				name
			)
			VALUES
				(#id#,
				 NOW(),
			   #name#
			)
    </insert>
    
    <select id="countOperatorByRoleId" resultClass="java.lang.Integer">
        SELECT  count(1) FROM operator t
       	WHERE  t.roleId = #roleId#
    </select>
    
    <delete id="deleteRole" parameterClass="java.lang.String" >
       DELETE FROM role 
		WHERE id = #id#
    </delete>
    
    <delete id="deleteRoleOp" parameterClass="java.lang.String" >
       DELETE FROM roleop
		WHERE roleId = #roleId#
    </delete>
    
    <select id="listRoleOp" parameterClass="java.lang.String" resultClass="roleOp">
    	select * from roleOp t
    	where t.roleId = #value#
    </select>
    
    <insert id="addRoleOp" parameterClass="java.util.List">
        INSERT INTO roleOp (
				id,
				createTime,
				roleId,
				opsId
			)
			VALUES
			<iterate conjunction="," >
				(#list[].id#, NOW(), #list[].roleId#, #list[].opsId#)
			</iterate>
    </insert>
    
</sqlMap>
