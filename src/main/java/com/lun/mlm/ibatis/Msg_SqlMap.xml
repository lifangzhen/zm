<?xml version="1.0"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
    
<sqlMap namespace="Msg_SqlMap">
    
    <typeAlias alias="zmMsg" type="com.lun.mlm.model.ZmMsg"/>
	<typeAlias alias="zmBanner" type="com.lun.mlm.model.ZmBanner"/>
	<typeAlias alias="zmUser" type="com.lun.mlm.model.ZmUser"/>
	<typeAlias alias="zmFriend" type="com.lun.mlm.model.ZmFriend"/>
	<typeAlias alias="zmMsgPraize" type="com.lun.mlm.model.ZmMsgPraize"/>

	<select id="getFriend" resultClass="zmFriend">
		SELECT * FROM zm_friend m
		WHERE m.user_id = #userId#
		AND m.friend_user_id = #friendUserId#
	</select>

	<insert id="addZmFriend" parameterClass="zmFriend">
		INSERT INTO zm_friend (
		id,
		user_id,
		friend_user_id,
		create_at,
		update_at,
		status
		)values(
		#id#,
		#user_id#,
		#friend_user_id#,
		NOW(),
		NOW(),
		#status#
		)
	</insert>
	<insert id="addZmUser" parameterClass="zmUser">
		INSERT INTO zm_user (
		id,
		open_id,
		name,
		head_img,
		sex,
		area,
		phone,
		create_at,
		update_at
		)
		VALUES
		(#id#,
		#open_id#,
		#name#,
		#head_img#,
		#sex#,
		#area#,
		#phone#,
		NOW(),
		NOW()
		)
	</insert>

	<select id="getUserByOpenId" resultClass="zmUser">
		SELECT * FROM zm_user m
		WHERE m.open_id = #openId#
	</select>

	<select id="getUserById" resultClass="zmUser">
		SELECT * FROM zm_user m
		WHERE m.id = #id#
	</select>

	<select id="listBanner"  resultClass="zmBanner">
		SELECT * FROM zm_banner m
		WHERE m.store_id = #storeId#
	</select>
    
    <select id="list"  resultClass="zmMsg">
    	SELECT * FROM zm_msg m
		WHERE m.store_id = #storeId#
		<isNotEmpty property="tableId">
			AND m.table_id = #tableId#
		</isNotEmpty>
		<isNotEmpty property="msgId">
			AND m.msg_id = #msgId#
		</isNotEmpty>
        ORDER BY m.create_at DESC
		<isNotEmpty property="start">
			LIMIT #start#, #end#
		</isNotEmpty>
    </select>

	<select id="listFriend"  resultClass="zmFriend">
		SELECT * FROM zm_friend m
		WHERE m.user_id = #userId#
		ORDER BY m.create_at DESC
		<isNotEmpty property="start">
			LIMIT #start#, #end#
		</isNotEmpty>
	</select>

	<delete id="delFriend" parameterClass="java.util.HashMap">
		delete from zm_friend
		where user_id = #userId#
		and friend_user_id = #friendUserId#
	</delete>

	<insert id="msgAdd" parameterClass="zmMsg">
		INSERT INTO zm_msg (
		id,
		msg_id,
		user_id,
		store_id,
		table_id,
		detail,
		pic1,
		pic2,
		pic3,
		create_at,
		update_at
		)values(
		#id#,
		#msg_id#,
		#user_id#,
		#store_id#,
		#table_id#,
		#detail#,
		#pic1#,
		#pic2#,
		#pic3#,
		NOW(),
		NOW()
		)
	</insert>

	<update id="updateZmUser" parameterClass="zmUser" >
		UPDATE zm_user t
		SET <isNotEmpty property="name">
				t.name = #name#,
			</isNotEmpty>
		<isNotEmpty property="head_img">
			t.head_img = #headImg#,
		</isNotEmpty>
		<isNotEmpty property="sex">
			t.sex = #sex#,
		</isNotEmpty>
		<isNotEmpty property="area">
			t.area = #area#,
		</isNotEmpty>
		<isNotEmpty property="phone">
			t.phone = #phone#,
		</isNotEmpty>
		t.update_at = NOW()
		WHERE t.id = #id#
	</update>

	<update id="share" parameterClass="java.lang.String" >
		UPDATE zm_msg t
		SET t.share_count = t.share_count+1,
		t.update_at = NOW()
		WHERE t.id = #id#
	</update>

	<update id="praize" parameterClass="java.lang.String" >
		UPDATE zm_msg t
		SET t.praize_count = t.praize_count+1,
		t.update_at = NOW()
		WHERE t.id = #id#
	</update>

	<update id="comment" parameterClass="java.lang.String" >
		UPDATE zm_msg t
		SET t.comment_count = t.comment_count+1,
		t.update_at = NOW()
		WHERE t.id = #id#
	</update>

	<insert id="msgPraizeAdd" parameterClass="zmMsgPraize">
		INSERT INTO zm_msg_praize (
		id,
		msg_id,
		user_id,
		create_at,
		update_at
		)values(
		#id#,
		#msg_id#,
		#user_id#,
		NOW(),
		NOW()
		)
	</insert>

	<select id="countPraizeByUserId" parameterClass="zmMsgPraize" resultClass="java.lang.Integer">
		SELECT count(1) FROM zm_msg_praize m
		WHERE m.user_id = #user_id#
		and m.msg_id = #msg_id#
	</select>
    
</sqlMap>
